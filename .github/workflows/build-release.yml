name: Build and release

on:
  push:
    branches: [trunk]
    paths-ignore: ['README.md']

jobs:
  build:
    name: Build
    runs-on: elvia-runner
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Resolve version
        run: echo "VERSION_TAG=v$(cat VERSION)" >> "$GITHUB_ENV"

      - name: Build
        uses: 3lvia/core-github-actions-templates/build@trunk
        with:
          name: '3lv'
          checkout: 'false'
          registry: 'ghcr'
          project-file: 'Dockerfile'
          docker-cache-tag: ${{ github.event_name == 'push' && 'latest' }}
          docker-additional-tags: ${{ env.VERSION_TAG }}
          ghcr-omit-repository-name: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release if new version
        if: ${{ github.event_name == 'push' }}
        run: |
          latest_version=$(gh release list --json name,isLatest -q '.[] | select(.isLatest == true) | .name')
          if [[ "$latest_version" == '${{ env.VERSION_TAG }}' ]]; then
            echo "Version already released."
            exit 0
          fi

          gh release create \
            '${{ env.VERSION_TAG }}' \
            --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Override major tag
        if: ${{ github.event_name == 'push' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git fetch --tags
          git tag '${{ env.MAJOR_VERSION_TAG }}' '${{ env.VERSION_TAG }}' -f
          git push --tags -f
